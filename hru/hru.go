package hru

import (
	"math/rand"
	"regexp"
	"strings"
	"time"

	"github.com/beshenkaD/unverblumt/bot"
)

func init() {
	rand.Seed(time.Now().UnixNano())
}

func getHru() string {
	description := func() string {
		descs := []string{"–û–¥–µ–±–∏–ª–µ–≤—à–∏–π", "–ü–æ–Ω–∞–¥—É—Å–µ—Ä–æ–≤—ã–π", "–©–µ–Ω–µ–≤–º–µ—Ä–ª—ã–π", "–ú–∞–π–¥–∞–Ω—É—Ç—ã–π", "–ì–æ—Ä–µ–ª–æ–¥—É–ø—ã–π", "–î–µ–±–∏–ª–æ—Å–∫–∞—á—É—â–∏–π", "–ë–∞–Ω–¥–µ—Ä–æ—Ñ–∞—à–∏—Å—Ç–∫–∏–π"}

		t := descs[rand.Intn(len(descs))]
		if rand.Intn(2) == 1 {
			t1 := descs[rand.Intn(len(descs))]
			if t1 != t {
				t = t + " " + t1
			}
		}

		return t
	}

	name := func() string {
		names := []string{"—à–≤–∞–π–Ω–æ–∫–∞—Ä–∞—Å—å", "—Å–≤–∏–Ω–æ–ø—ë—Å", "–∫–∞–∫–ª–æ—à–≤–∞–π–Ω", "–≥–æ–≤–Ω–æ—Ö—É–π", "–±–∞–Ω–¥–µ—Ä–∞", "—à–≤–∞–π–Ω–æ–ø–µ—Å–∫–∞—Ä—å", "—Ö—É–π–ª–æ–ø–∞–Ω"}
		names = append(names, []string{"c–≤–∏–Ω", "–±–æ—Ä–æ–≤", "—Ö—Ä—è–∫", "–±–æ—Ä—å–∫–∞", "—Ö—Ä—é—à–∫–∞", "–ø–æ–¥—Å–≤–∏–Ω–æ–∫", "—Å–≤–∏–Ω—Ç—É—Å", "–ø–æ—Ä–æ—Å–µ–Ω–æ–∫"}...)

		return names[rand.Intn(len(names))]
	}

	action := func() string {
		actions := []string{"—Ö—Ä—é–∫–Ω—É–ª", "–ø—É–∫–Ω—É–ª", "–≥—Ä–æ–º–∫–æ –ø—Ä–æ—Ö—Ä—é–∫–∞–ª", "—á–∞–≤–∫–∞–µ—Ç", "–ø–æ–¥—Ö—Ä—é–∫–∏–≤–∞–µ—Ç", "–ø–æ–¥–ø—É–∫–∏–≤–∞–µ—Ç"}
		actions = append(actions, []string{"–∏–∑–¥–∞–µ—Ç –∑–≤—É–∫–∏ —Ö—Ä—é–∫–∞–Ω—å—è", "–ø—Ä–æ—Ç–µ—Å—Ç—É–µ—Ç", "—Å—Ä–µ—Ç"}...)

		for _, a := range actions {
			actions = append(actions, "—Å–Ω–æ–≤–∞"+" "+a)
			actions = append(actions, "–æ–ø—è—Ç—å"+" "+a)
		}

		return actions[rand.Intn(len(actions))]
	}

	emoji := func() string {
		emojis := []string{"üêñ", "üê∑", ")"}

		t := ""
		for i := 0; i < rand.Intn(10); i++ {
			t += emojis[rand.Intn(len(emojis))]
		}

		return t
	}

	return description() + " " + name() + " " + action() + " " + emoji()
}

func HruCommand(in *bot.CommandInput) (*bot.Output, error) {
	in.Bot.DeleteMessage(in.Msg.Chat.ID, in.Msg.MessageID)

	return &bot.Output{
		Text:    getHru(),
		UseHTML: false,
	}, nil
}

func HruWatcher(in *bot.HookInput) (*bot.Output, error) {
	validHru := regexp.MustCompile(`.*(—Ö+—Ä+—é+|h+r+u+)+.*`)

	if validHru.MatchString(strings.ToLower(in.Msg.Text)) {
		return &bot.Output{
			Text:    getHru(),
			UseHTML: false,
		}, nil
	}

	return nil, nil
}
